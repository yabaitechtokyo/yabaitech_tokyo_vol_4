@require: pervasives

@import: lib/label
@import: bibliography
@import: document-config
@import: font-config
@import: mutables

module Chapterish : sig

  val chapter-heading : context -> inline-boxes option -> inline-boxes -> block-boxes
  val chapter-scheme : context -> string option -> bib-defs -> inline-text -> inline-text option -> inline-text -> block-text -> block-boxes
  val section-scheme : context -> string option -> inline-text -> block-text -> block-boxes
  val subsection-scheme : context -> string option -> inline-text -> block-text -> block-boxes
  val subsubsection-scheme : context -> string option -> inline-text -> block-text -> block-boxes

end = struct

  open DocumentConfig
  open Mutables
  open FontConfig

  let-mutable num-chapter <- 0
  let-mutable num-section <- 0
  let-mutable num-subsection <- 0

  let chapter-heading ctx ib-num-opt ib-title =
    let bb =
      match ib-num-opt with
      | None         -> block-nil
      | Some(ib-num) -> line-break false false ctx (ib-num ++ inline-fil)
    in
      bb +++ line-break false false ctx (ib-title ++ inline-fil) +++ block-skip 36pt


  let section-heading ctx ib-heading =
    line-break true false (ctx |> set-paragraph-margin section-top-margin section-bottom-margin) ib-heading


  let make-bb-bib-section ctx-bib ctx-doc bibliography =
    match bibliography with
    | [] -> Block.nil
    | bibliography -> 
        let ib-bib-title =
          ctx-doc
          |> make-chapter-title
          |> Inline.read {参考文献}
        in
        let bb-bib-title =
          (ib-bib-title ++ inline-fil)
          |> section-heading ctx-doc
        in
        let bb-bib-main = Bibliography.render-block-bibs ctx-bib bibliography
        in
        bb-bib-title +++ bb-bib-main

  let chapter-heading-with-author ctx ib-num-opt ib-title ib-subtitle ib-author =
    let bb-num-opt =
      match ib-num-opt with
      | None         -> block-nil
      | Some(ib-num) -> line-break false false ctx (ib-num ++ inline-fil)
    in
    let bb-title = line-break false false ctx (ib-title ++ inline-fil) in
    let bb-subtitle = line-break false false ctx (inline-fil ++ ib-subtitle ) in
    let bb-author = line-break false false ctx (inline-fil ++ ib-author) in
      bb-num-opt +++ bb-title +++ bb-subtitle +++ bb-author +++ block-skip 18pt

  let chapter-scheme ctx labelopt bibliography title subtitle author inner =
    let txtwid = text-width in
    let () = increment num-chapter in
    let () = num-section <- 0 in
    let () = num-subsection <- 0 in
    let () = num-figure <- 0 in
    let () = num-theorems <- 0 in
    let s-num = arabic (!num-chapter) in
    let label = Label.or-fresh labelopt in
    let () = register-cross-reference (`chapter:` ^ label ^ `:num`) s-num in
    let () = toc-acc-ref <- (TOCElementChapter(label, title, subtitle, author)) :: !toc-acc-ref in
    let ctx-title = make-chapter-title ctx in
    let ctx-subtitle = make-chapter-subtitle ctx in
    let ctx-author = make-chapter-author ctx in
    let ctx-doc =
      get-standard-context txtwid
        |> set-font-size 12pt
        |> set-leading 18pt
        |> set-hyphen-penalty 1000
    in
    let ib-num =
      read-inline ctx-title ({})
        ++ hook-page-break (fun pbinfo _ ->
             register-cross-reference (`chapter:` ^ label ^ `:page`) (arabic pbinfo#page-number))
    in
    let ib-title = (read-inline ctx-title title) in
    let ib-subtitle = match subtitle with
          | None    -> inline-nil
          | Some(st) -> (read-inline ctx-subtitle {―}) ++ (read-inline ctx-subtitle st) ++ (read-inline ctx-subtitle {―}) in
    let ib-author = read-inline ctx-author author in
    let bb-title = chapter-heading-with-author ctx (Some(ib-num)) ib-title ib-subtitle ib-author in
    let bb-inner = read-block ctx inner in

    let () = Bibliography.register-bibs bibliography
    in
    let bb-bib-section = make-bb-bib-section ctx ctx-doc bibliography
    in
    bb-title +++ bb-inner +++ bb-bib-section +++ clear-page

  let section-scheme ctx label-opt title inner =
    let ctx-title = make-section-title ctx in
    let () = increment num-section in
    let () = num-subsection <- 0 in
    let s-num = arabic (!num-section) in
    let label = Label.or-fresh label-opt in
    let () = register-cross-reference (`section:` ^ label ^ `:num`) s-num in
%    let () = toc-acc-ref <- (TOCElementSection(label, title)) :: !toc-acc-ref in
    let ib-num =
      read-inline ctx-title (embed-string (s-num ^ `.`))
        ++ hook-page-break (fun pbinfo _ ->
             register-cross-reference (`section:` ^ label ^ `:page`) (arabic pbinfo#page-number))
    in
    let ib-title = read-inline ctx-title title in
    let bb-title = section-heading ctx (ib-num ++ (inline-skip 10pt) ++ ib-title ++ (inline-fil)) in
    let bb-inner = read-block ctx inner in
      bb-title +++ bb-inner

  let subsection-scheme ctx label-opt title inner =
    let () = num-subsection <- !num-subsection + 1 in
    let s-num = arabic (!num-section) ^ `.` ^ arabic (!num-subsection) in
    let label = Label.or-fresh label-opt in
    let () = register-cross-reference (`subsection:` ^ label ^ `:num`) s-num in
%    let () = toc-acc-ref <- (TOCElementSubsection(label, title)) :: !toc-acc-ref in
    let ctx-title = make-subsection-title ctx in
    let ib-num =
      read-inline ctx-title (embed-string (s-num ^ `.`))
        ++ hook-page-break (fun pbinfo _ ->
             register-cross-reference (`subsection:` ^ label ^ `:page`) (arabic pbinfo#page-number))
    in
    let ib-title = read-inline ctx-title title in
    let bb-title =
      line-break true false (ctx |> set-paragraph-margin section-top-margin section-bottom-margin)
        (ib-num ++ (inline-skip 10pt) ++ ib-title ++ (inline-fil))
    in
    let bb-inner = read-block ctx inner in
      bb-title +++ bb-inner

  let subsubsection-scheme ctx label-opt title inner =
    let ib-title =
      let ctx-title = make-subsubsection-title ctx
      in
      read-inline ctx-title title
    in
    let bb-title = line-break true false ctx (ib-title ++ inline-fil)
    in
    let bb-main = read-block ctx inner in
    bb-title +++ bb-main

end
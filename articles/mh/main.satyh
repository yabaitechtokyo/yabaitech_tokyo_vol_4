@import: ../../class/yabaitech

module MhMain = struct

let article = '<
  +section{ほんだい}<
    +p{
さあ本題に入りましょう。
まずは（比較的）有名そうなところからです。
    }

    +subsubsection{Human Resource Machine}<
    +p{
Human Resource Machine\footnote{https://tomorrowcorporation.com/humanresourcemachine}は、
一会社員となり上司から与えられるお仕事を機械的にこなすためのルーチンを組むゲームです。
少々前ですがAtCoderのChokudai氏が言及していたこともありご存知の方もいらっしゃるでしょうか。
ゲーム内容は端的に言えば機械語でのプログラミングで、
add, neg, succ程度の簡素な数値演算に比較とジャンプ命令を組み合わせて、
高級言語ならさらりと書けるであろうコードをチマチマと組み立てることになります。
使用できる命令の幅は次第に増え、後半にはメモリアクセス的処理も登場します。
全体的な難易度はプログラミングに慣れているなら簡単かなといったところですが、
高難易度問題や各問題の追加目標となるステップ数最適化と行数最適化（コードゴルフ）
も用意されており、そこまで手を付ければそれなりに大変です。
世界観は（企業的な意味でも）少々ブラックな雰囲気になってはいますが主張は強くなく、
各面で出題役の上司キャラからとの会話と数ステージごとに挿入されるムービー程度です。
開発元に特徴的なギョロ目二頭身キャラたちは（慣れれば）可愛らしくもありますが、
ストーリーの方はなかなか難解なのでオマケ程度に考えておくのが良いかも。
    }

    +p{
このゲームのようにアセンブリを書かせるシステムは比較的多く、
この後でもいくつも紹介することになります。
普段と命令セットが変わることによるゲーム感の向上（もしくは仕事感の減少）や
低レイヤゆえの実装の簡便さが採用の理由でしょうか。
とは言えそこに少しのアレンジが加わることで大きくゲーム体験が変わってしまうのが醍醐味でしょう。
HRMはそういった意味ではかなり味付けが少ない部類なので、
この類のゲームの入り口としてもお勧めです。
Steam以外にもNintendo Switchからも配信されているので、手も出しやすいと思います。
    }

    +p{
このゲーム実はすでに続編である7 Billion Humans
\footnote{https://tomorrowcorporation.com/7billionhumans}も公開されています。
こちらでは前作で一会社員だったところから少々階級が上がり、
中間管理職としてチーム運営、i.e. 並列プログラミング、を行うことになります。
基本的なインタフェースは大きく変化しないものの、
プログラムの内容がマルチスレッド想定となることで難易度は体感かなり上昇しています。
複数の部下たちが全員同じ仕事（コード）を実行していくのですが、
必ずしも同期が取れないうえ社員間でのデータ受け渡しも頻発します。
逐次実行に慣れた頭ではなかなかに歯応えがあり、
前作はサクサク解けた人でも挑戦しがいがあると思います（筆者はまだ途上で苦しんでいます）。
こちらも各面に実行時間最適化・コードゴルフ目標が設定されているので
さらなるやり込みも可能です。
存分に部下たちを働かせましょう。
    }
    >

    +subsubsection{TIS 100}<
    +p{
TIS 100\footnote{http://www.zachtronics.com/tis-100}はタイトルに冠された並列計算機、
TIS100のプログラミングを行うゲームです。
7 Billion Humansと同じく並列プログラミングを行うことになるものの、システムは大きく異なります。
TIS100のハードウェアは小さな計算ノードが
グリッド状に接続されて構成されており、
各ノードに個別にコードを記述できるようになっています。
7 Billion Humansでは全ノード（社員）に同じコードを与えていたところが
別々になった分全体の挙動を把握するのは楽になりますが、
一つのノードはレジスタを二つしか持たずまた記述できるコード量も小さく制限されているため、
処理を小さく分割して各ノードに分散させていく必要があり、そこがゲームの肝となっています。
本作にはチュートリアルが用意されておらず
知人から譲り受けた仕様書という体のpdf（実際に印刷することが推奨されています）から
命令セットやハードウェアを読み解きながら操作方法を学んでいく形をとっており、
解像度の低いディスプレイを再現したゲーム画面もあり雰囲気も楽しめると思います。
Human Resource Machineには最適化目標ありましたが、
こちらでは世界中のプレイヤー達がどれだけのコード量・実行時間で各面をクリアしたかの情報が
収集されており、自分の位置と共にヒストグラムで確認することができます。
各面の回答を複数保存できるなど記録追求もやりやすい仕様になっているので
ランキング上位を目指して最適化に励むのもいいですし、
TIS100組み込みの描画機能でお絵かきに挑戦するのもいいかもしれません。
    }

    +p{
TIS100の開発元であるZACHTRONICS\footnote{http://www.zachtronics.com}はこの種のゲームを
メインに制作を行なっているチームです。
実のところこの記事用にリストアップしたゲームの半分ほどが同団体の制作であり
どこまで紹介すべきか少々悩む部分もあるのですが、プレイした分については並べておこうと思います。
どれも質が高い作品となっているので、気になるものがあればぜひプレイしてみてください。
    }
    >

    +subsubsection{SHENZHEN I/O}<
    +p{
SHENZHEN I/O\footnote{http://www.zachtronics.com/shenzhen-io}はハードウェア込みでの製品開発をテーマにしています。
TIS100同様にゲーム付属のハードウェア仕様書pdfを参照しつつ、
指定の基板状にマイコンチップを配置・配線・コーディングして製品を完成させます。
各チップに独自のアセンブリ言語でコードを書き込むことになるのですが、
TIS100同様書き込める行数には制限があるので、どう役割を分割するか考えることになる他、
数値に加えてアナログ値（ゲームの都合上実際にはデジタルですが）の二種類の
入出力配線を取り扱うことになります。
TIS100と比べるとノードの種類や情報のやりとりなどで自由度が上がり、その分要求仕様も増え
考えることも増えたという印象です。
順当な発展版と見てもいいのかもしれません。
    }

    +p{
開発元は違いますがSilicon Zeros\footnote{http://pleasingfungus.com/Silicon\%20Zeroes}も
回路を接続するという意味で似たシステムになっています。
こちらでは扱う部品がかなり低レイヤ寄りで、加算器やアダー、ラッチに
アドレス指定で値を読み書きするメモリといった電子回路部品を組み合わせていくことになります。
回路の配線を引くだけでコードの記述はないためマウスのみでプレイでき、
他に比べかなり軽いゲーム感でサクサクと進められるので、電子回路を学び始めた人にお勧めです（？）。
    }
    >

    +subsubsection{Space Chem}<
    +p{
さてここからは一般的なプログラミングからは離れる方向に進んでいきましょう。
Space Chem\footnote{http://www.zachtronics.com/spacechem}は
打って変わってコンピュータから離れ、化学をテーマにしています。
とはいっても授業で学んだような化学合成が出てくるわけではありません。
謎技術によって分子・原子を単体分離して扱える上
結合数の増減も物理法則を無視して自由自在に行えるのであくまでフレーバーになります。
ゲーム的には合成装置の盤面に原子を持ち運べるアームとそれが移動する軌道を設定し、
軌道上の各ポイントにアームの掴み・離しや入力化合物の投入指示などを配置することで
全体の動作を調整していくことになります。
クレーンゲームのような機械をプログラムするイメージが近いでしょうか。
配置の自由度は比較的高く、面によってはその自由度を生かして生成速度を調整し、
複数の装置同士が協調してバランスよく動作するようにする必要も出てきます。
なお、筆者の環境ではOSのアップデートに伴って起動できなくなったため積みゲーと化しました。
Macをメインにお使いの方は注意してください。
    }
    >

    +subsubsection{Opus Mugnam}<
    +p{
Opus Mugnam\footnote{http://www.zachtronics.com/opus-magnum/}
も近いシステムを持ったゲームです。
こちらは錬金術がテーマになっており、原子の代わりに
地水火風の四元素のエレメントに加え、三原質（硫黄、水銀、塩）や
金属元素を結合・分離・変換させて目的の物質を構成していくことになります。
ヘクスの盤面にアーム、物質の結合・分離や変換を行う装置を配置し、
掴み離しや回転・伸縮といった一連の動作を各アームにプログラムして、
生成物を移動させながら合成を進める形になります。
Space Chemがクレーンゲームのようなイメージだったのに対し、
こちらは工場の製造ライン（ラインではなく二次元になりますが）で
ベルトコンベアの代わりにロボットアームを使うようなイメージです。
生成物だけでなくアームも盤面状に実体を持つため、
やりとりの間に衝突が起きないような配置と動作定義が必要になります。
ラインを構成した後、盤面上でアームが回転し生成物が整然と流れ組み立てられていく様は、
グラフィックの質の高さもありいつまでも眺められます。
見た目にも大変美しいゲームなので、ぜひ公式ページからPVを見てみてください。
    }

    +p{
実はこのゲームには前身となる作品も存在しています。
the codex of alchemists
\footnote{https://www.kongregate.com/games/krispykrem/the-codex-of-alchemical-engineering}
がそれで、盤面がヘクスではなくグリッドであることを除けば
ゲームシステムはほぼサブセット的内容になっています。
こちらは無料でのプレイが可能なので試しに遊んでみてはいかがでしょうか。
     }
     >

    +subsubsection{KOHCTPYKTOP}<
    +p{
KOHCTPYKTOP
\footnote{http://www.kongregate.com/games/krispykrem/kohctpyktop-engineer-of-the-people?referrer=Jayisgames}
もthe codex of alchemists同様、Zachtronics最初期の作品の一つです。
冷戦時代の共産主義をフレーバーにしつつ、基板へ特殊な導体での配線を行うパズルになっています。
二種の導体で実現される論理ゲートを組み合わせて回路を構成するのですが、
配線上を流れる電気信号の物理的な遅延を考慮しうまく利用する必要があります。
問題数は多くないものの難易度はかなりハードです。
ブラウザゲームとして公開されている他、
これらを含む初期作品や制作ノートをまとめたZACH-LIKE
\footnote{http://www.zachtronics.com/zach-like/}がSteamで配布されています。
    }
    >

    +subsubsection{Manufactoria}<
    +p{
そろそろZachtronicsから離れましょう。
Manufactoria\footnote{http://pleasingfungus.com/Manufactoria/}
は工場の生産物の品質チェック装置を作るゲームで、
具体的には製品に組み込まれた記号列が条件をみたすかをチェックすることになります。
製品（記号列）をベルトコンベアで流しながら、先頭一文字による分岐や文字の追加削除を利用して
指定の条件を満たすものを選別していきます。
各操作で先頭の一文字を処理していくという意味ではオートマトンを
平面上に構成していくような趣があります。
記号列と言いましたが入力で使われる記号は赤丸青丸の二種類なので実質バイナリで、
実際入力を数値とみなした問題も出てきます。
中盤からはプレイヤーのみ利用できる色がさらに二色追加され、
可能な操作が増える分さらに複雑な処理を求められるようになります。
最適化目標等は設定されていませんが、コミュニティを探せば部品の最小配置数を
競っていたりもするので気になったら覗いてみても良いかもしれません。
\footnote{たとえば\href(`http://blog.livedoor.jp/lkrejg/archives/65437773.html`){こちら(http://blog.livedoor.jp/lkrejg/archives/65437773.html)}}
    }
    >

    +subsubsection{jahooma's logic box}<
    +p{
jahooma's logic box\footnote{https://logicbox.jahooma.com}
も同様に文字列処理を行うブラウザゲームです。
入力として与えられる文字列を処理部品を用いて盤面上を流しつつ変換していく点では同じなのですが、
こちらでは入力文字種が01から英アルファベット+数値にまで増えています。
タイトル通り処理部品であるボックスを盤面に配置していくことになりますが、
各面自体がまたボックスになっており、以降の面でも一つの部品として利用できるようになるという
独特の構成になっています（とはいえ実際に再利用できるのは一部のみですが）。
途中からは自分自身を部品として配置できる再帰的な構成も現れます。
また値の受け渡し方法もベルトコンベアをいちいち引いていたManufactoriaからは少々変わり、
各ボックスから一方向に一直線に投げ飛ばすようにして受け渡しを行います。
各基本部品の処理能力も多少高く・幅広くなっているので、
メインのプレイ感も部品の配置というよりは処理をどう行うかの方に変わっているように思います。
    }

    +p{
なお上記の引用先は改訂版で、前作となる作品も存在します
\footnote{http://www.kongregate.com/games/jahooma/jahoomas-logicbox}。
どちらもブラウザゲームですが、旧版はFlash、新版はHTMLによる実装になっているようです。
正直なところ旧版の方がグラフィックやUIは上なのですが、旧版をプレイして気に入ったなら
問題数がより充実している新版にも手を出して（そして作者へお布施をして）みてください。
    }
    >

    +subsubsection{Tile factory}<
    +p{
Tile factory\footnote{http://www.kongregate.com/games/duerig/tile-factory?acomplete=tile+fa}
もまた製品を盤面上で流しながら処理を加えていくゲームです。
こちらでは処理対象がタイトル通りタイルで、これに指定の模様を印刷することが目的になります。
ベルトコンベアでの移動、スプレーでの色の吹き付け、上書きを防ぐためのマスク貼り付けや
塗料の混合など必要操作は多岐にわたります。
装置の起動方法も独特で、タイルが上を通ると反応する圧力センサでの起動をメインに、
シグナルの論理合成や遅延部品まで使って配線を行うことができます。
扱う対象が文字列ではなくカラフルなタイルであることや各装置のポップな動きなど
他より（視覚的な）親しみやすさは高めですが、
システムの複雑さは引けを取らずボリュームもなかなかの仕上がりになっています。
    }
    >

    +subsubsection{herbert online judge}<
    +p{
忘れていましたがプログラミングゲームといえば
herbert online judge\footnote{http://herbert.tealang.info}にも言及しておくべきでしょう。
盤面上を動き回るロボットの挙動を操り、指定のマスを正しく踏むように
独自の言語でプログラムするパズルゲームです。
かなり厳しく設定された文字数制限を潜り抜けるためのコードゴルフ要素がメインになっています。
サイトの公開自体は十年近く前になりますがまだプレイしている方はおり、
有志によるWikiも更新されているようです。
問題作成やリーダーボードも用意され、問題数も2000を超えているのでやりがいは十分でしょう。
    }
    >

    +subsubsection{Screeps}<
    +p{
最後に少々毛色が違うものを二つ紹介して終わりにしましょう。
ここまではテーマやシステムがプログラミングであるゲームでしたが、
Screeps\footnote{https://screeps.com}は操作がプログラミングになっているMMOゲームです。
ジャンル的にはシミュレーションで、各プレイヤーは自拠点から自律動作するユニットを生産し、
広大なマップの上でリソースを収集し戦闘や建築を行いながら領土を広げていくことになります。
特徴的なのはユニットの生産戦略から各ユニットの挙動までの全てが
プレイヤーのプログラムにかかっているというところです。
すなわち戦闘・生産・機動力といったユニットごとの性能はもちろん、
何を目的として、どこを目指して動くのか、敵やリソースを見つけたらどうするのかといった
行動パターンまで全てをプログラムする必要があるのです。
プログラミングのための言語はJavaScriptで、APIドキュメントが公式ページに完備されています。
MMOですからもちろん対戦相手は他の人間（によってプログラムされたユニット）です。
あなたもゲームAIプログラミングにチャレンジしてみませんか。
    }
    >

    +subsubsection{DUSKERS}<
    +p{
最後にDUSKERS\footnote{http://duskers.misfits-attic.com}を紹介します。
これをプログラミングがテーマのゲームというのは少々違うかもしれませんが、
見慣れたCUIでのコマンド入力が基本操作になるので親近感はあると思います。
このゲームではプレイヤーは宇宙船のパイロットで、他の生存者を探して宇宙をさまようことになります。
各所にある廃棄された宇宙船から資源を収集することでより長く探索を続けていくことになるのですが、
メインとなる作業は全てドローンが担い、
プレイヤーは本船からそれらドローンの遠隔操作を行うことになります。
CUIからコマンドを叩いてドローンを操作し、対象宇宙船のシステムに侵入して情報を得、
ドローンのセンサ越しに状況を見ながらの探索は、
本当に宇宙空間に一人でいるような没入感を体験させてくれます。
独特のプレイ感をぜひ体験してみてください。
    }
    >
  >

  +section{おわりに}<
    +p{
以上、つらつらと並び立てましたが、気になるものはあったでしょうか。
世界にゲーム含め娯楽は山ほどあり、何に有限の人生を使うかは難しい選択ではありますが
その選択肢の一つにこれらのゲームを加えられることができていれば幸いです。
    }
  >
>

end
